# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import typing
from .project_response_model_target_audience import ProjectResponseModelTargetAudience
from .project_state import ProjectState
from .project_response_model_access_level import ProjectResponseModelAccessLevel
from .project_response_model_fiction import ProjectResponseModelFiction
from .project_creation_meta_response_model import ProjectCreationMetaResponseModel
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class ProjectResponse(UncheckedBaseModel):
    project_id: str
    name: str
    create_date_unix: int
    default_title_voice_id: str
    default_paragraph_voice_id: str
    default_model_id: str
    last_conversion_date_unix: typing.Optional[int] = None
    can_be_downloaded: bool
    title: typing.Optional[str] = None
    author: typing.Optional[str] = None
    description: typing.Optional[str] = None
    genres: typing.Optional[typing.List[str]] = None
    cover_image_url: typing.Optional[str] = None
    target_audience: typing.Optional[ProjectResponseModelTargetAudience] = None
    language: typing.Optional[str] = None
    content_type: typing.Optional[str] = None
    original_publication_date: typing.Optional[str] = None
    mature_content: typing.Optional[bool] = None
    isbn_number: typing.Optional[str] = None
    volume_normalization: bool
    state: ProjectState
    access_level: ProjectResponseModelAccessLevel
    fiction: typing.Optional[ProjectResponseModelFiction] = None
    quality_check_on: bool
    quality_check_on_when_bulk_convert: bool
    creation_meta: typing.Optional[ProjectCreationMetaResponseModel] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
